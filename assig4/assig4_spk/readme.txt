Name: Steven Kordell
Class: CS2303
Section: C04
Assignment: 4
Date Due: 02/11/2013


File List:
readme.txt
stest.c
stest2.c
stest3.c
stest4.c
stest5.c
employeef.c
employeef.h
makefile
Doxyfile


Program descriptions:

stest:
This program will prompt the user to enter in an Employes data. It will make a struct containing that data as well as a couple other example structs. It will then save these structs to the file stest.txt in the current directory.

stest2:
This program will prompt the user to enter how many employees they wish to create. It will then prompt for the information for each employee. When all the employees have been entered, it will make the employee structures and save those structures to the file stest2.txt. Before exiting, the program will free all the allocated memory used by the structs.

stest3:
This program will read the file stest.txt (generated by program stest) and create an employee struct for each employee found in the file. It will print these employees to the terminal. Before exiting, the program will free all the allocated memory used by the structs.

stest4:
This program will prompt the user to enter how many employees they wish to create. It will then prompt for the information for each employee. When all the employees have been entered, it will make the employee structures and save those structures to a binary file called  stest4.txt. Before exiting, the program will free all the allocated memory used by the structs.

stest5:
This program will read the binary file stest4.txt (generated by program stest4) and create an employee struct for each employee found in the file. It will print these employees to the terminal. Before exiting, the program will free all the allocated memory used by the structs.



Compilation instructions:
Unzip the contents of this zip file with the unzip command. Cd to the correct directory and run "make", without quotes. Five executable files (stest, stest2, stest3, stest4, and stest5) will be produced.
Alternatively, run 'make debug" will produce the executable files, but with symbols included for debugging purposes. Running "make debugplus" will produce all the excutables and also define the DEBUG constant, allowing the programs to provide extra debug information during runtime.
Running "make docs", will generate the Doxygen output file and copy the files (with the correct access permissions) to the assig4 folder of the user's public_html directory.
Running "make clean" will remove all object files and the executables from the directory.


Execution instructions:
To execute, cd to the correct directory and enter  "./stest" into the command line, without the quotes. Repeat with stest2, stest3, stest4, and stest5, preferably in that order as some executables produce files the later programs utilize.
